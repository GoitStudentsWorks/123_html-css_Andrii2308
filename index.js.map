{"version":3,"file":"index.js","sources":["../src/js/menu.js","../src/main.js"],"sourcesContent":["/*alert(\"Привіт, світ!\"); */\n// Отримуємо елементи з DOM\nconst burgerMenu = document.querySelector('.burger-menu'); // Саме меню\nconst burgerOpenButton = document.querySelector('.header-burger-button'); // Кнопка відкриття (в header)\nconst burgerCloseButton = document.querySelector('.burger-close-button'); // Кнопка закриття (хрестик)\n\n// Функція відкриття меню\nfunction openBurgerMenu() {\n  burgerMenu.classList.add('is-open'); // Додаємо клас для відображення\n  document.body.style.overflow = 'hidden'; // Блокуємо прокрутку body\n}\n\n// Функція закриття меню\nfunction closeBurgerMenu() {\n  burgerMenu.classList.remove('is-open'); // Прибираємо клас\n  document.body.style.overflow = ''; // Повертаємо прокрутку\n}\n\n// Слухачі подій\nburgerOpenButton.addEventListener('click', openBurgerMenu); // Відкриття при кліку на бургер\nburgerCloseButton.addEventListener('click', closeBurgerMenu); // Закриття при кліку на хрестик\n\n// Закриття при кліку на посилання в меню (опціонально)\nconst burgerLinks = document.querySelectorAll('.burger-menu-link');\nburgerLinks.forEach(link => {\n  link.addEventListener('click', closeBurgerMenu);\n});","import './js/menu';\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Розширений селектор: всі a[href^=\"#\"] в хедері і футері (або скрізь на сторінці)\n  // Якщо хочеш тільки хедер + футер: '.header-menu-links, .tel-list'\n  const allAnchorLinks = document.querySelectorAll('a[href^=\"#\"]');\n  const sections = document.querySelectorAll('section[id]');\n\n  // Плавне прокручування при кліку (тепер для всіх якірних посилань)\n  allAnchorLinks.forEach(link => {\n    link.addEventListener('click', e => {\n      const href = link.getAttribute('href');\n      if (href === '#' || href === '') return; // Ігноруємо порожні\n\n      e.preventDefault(); // Запобігаємо стандартному переходу\n      const targetId = href.substring(1); // Отримуємо id без \"#\"\n      const targetSection = document.getElementById(targetId);\n\n      if (targetSection) {\n        // Опціонально: offset для фіксованого хедера (щоб не ховав секцію)\n        const headerOffset = 80; // Заміни на висоту твого хедера (наприклад, 100 якщо вищий)\n        const elementPosition =\n          targetSection.getBoundingClientRect().top + window.pageYOffset;\n        const offsetPosition = elementPosition - headerOffset;\n\n        window.scrollTo({\n          top: offsetPosition,\n          behavior: 'smooth', // Плавний скрол\n        });\n\n        // Оновлюємо клас current тільки для хедерних посилань (як було)\n        // Якщо хочеш для футера теж — розшир navLinks\n        const navLinks = document.querySelectorAll('.header-menu-list a'); // Залишаємо тільки хедер\n        navLinks.forEach(l => l.classList.remove('current'));\n        const correspondingHeaderLink = document.querySelector(\n          `.header-menu-list a[href=\"${href}\"]`\n        );\n        if (correspondingHeaderLink) {\n          correspondingHeaderLink.classList.add('current');\n        }\n      }\n    });\n  });\n\n  // Відстеження видимих розділів при прокручуванні (залишаємо для хедера)\n  const observerOptions = {\n    root: null,\n    rootMargin: '-50% 0px -50% 0px', // Краще для центру екрану, або твій threshold: 0.5\n    threshold: 0,\n  };\n\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const id = entry.target.getAttribute('id');\n        const navLinks = document.querySelectorAll('.header-menu-list a'); // Тільки хедер\n        navLinks.forEach(link => {\n          link.classList.remove('current');\n          if (link.getAttribute('href') === `#${id}`) {\n            link.classList.add('current');\n          }\n        });\n      }\n    });\n  }, observerOptions);\n\n  sections.forEach(section => observer.observe(section));\n});\n"],"names":["burgerMenu","burgerOpenButton","burgerCloseButton","openBurgerMenu","closeBurgerMenu","burgerLinks","link","allAnchorLinks","sections","e","href","targetId","targetSection","offsetPosition","l","correspondingHeaderLink","observerOptions","observer","entries","entry","id","section"],"mappings":"ssBAEA,MAAMA,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAmB,SAAS,cAAc,uBAAuB,EACjEC,EAAoB,SAAS,cAAc,sBAAsB,EAGvE,SAASC,GAAiB,CACxBH,EAAW,UAAU,IAAI,SAAS,EAClC,SAAS,KAAK,MAAM,SAAW,QACjC,CAGA,SAASI,GAAkB,CACzBJ,EAAW,UAAU,OAAO,SAAS,EACrC,SAAS,KAAK,MAAM,SAAW,EACjC,CAGAC,EAAiB,iBAAiB,QAASE,CAAc,EACzDD,EAAkB,iBAAiB,QAASE,CAAe,EAG3D,MAAMC,EAAc,SAAS,iBAAiB,mBAAmB,EACjEA,EAAY,QAAQC,GAAQ,CAC1BA,EAAK,iBAAiB,QAASF,CAAe,CAChD,CAAC,ECzBD,SAAS,iBAAiB,mBAAoB,IAAM,CAGlD,MAAMG,EAAiB,SAAS,iBAAiB,cAAc,EACzDC,EAAW,SAAS,iBAAiB,aAAa,EAGxDD,EAAe,QAAQD,GAAQ,CAC7BA,EAAK,iBAAiB,QAASG,GAAK,CAClC,MAAMC,EAAOJ,EAAK,aAAa,MAAM,EACrC,GAAII,IAAS,KAAOA,IAAS,GAAI,OAEjCD,EAAE,eAAc,EAChB,MAAME,EAAWD,EAAK,UAAU,CAAC,EAC3BE,EAAgB,SAAS,eAAeD,CAAQ,EAEtD,GAAIC,EAAe,CAKjB,MAAMC,EADJD,EAAc,sBAAuB,EAAC,IAAM,OAAO,YACZ,GAEzC,OAAO,SAAS,CACd,IAAKC,EACL,SAAU,QACpB,CAAS,EAIgB,SAAS,iBAAiB,qBAAqB,EACvD,QAAQC,GAAKA,EAAE,UAAU,OAAO,SAAS,CAAC,EACnD,MAAMC,EAA0B,SAAS,cACvC,6BAA6BL,CAAI,IAC3C,EACYK,GACFA,EAAwB,UAAU,IAAI,SAAS,CAElD,CACP,CAAK,CACL,CAAG,EAGD,MAAMC,EAAkB,CACtB,KAAM,KACN,WAAY,oBACZ,UAAW,CACf,EAEQC,EAAW,IAAI,qBAAqBC,GAAW,CACnDA,EAAQ,QAAQC,GAAS,CACvB,GAAIA,EAAM,eAAgB,CACxB,MAAMC,EAAKD,EAAM,OAAO,aAAa,IAAI,EACxB,SAAS,iBAAiB,qBAAqB,EACvD,QAAQb,GAAQ,CACvBA,EAAK,UAAU,OAAO,SAAS,EAC3BA,EAAK,aAAa,MAAM,IAAM,IAAIc,CAAE,IACtCd,EAAK,UAAU,IAAI,SAAS,CAExC,CAAS,CACF,CACP,CAAK,CACF,EAAEU,CAAe,EAElBR,EAAS,QAAQa,GAAWJ,EAAS,QAAQI,CAAO,CAAC,CACvD,CAAC"}